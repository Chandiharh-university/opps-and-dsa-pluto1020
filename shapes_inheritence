#include <iostream>
using namespace std;

class Shape {
public:
    virtual double getArea() const = 0;
    virtual void printInfo() const = 0; 
};

class Circle : public Shape {
private:
    double radius;
public:
    Circle(double r) : radius(r) {}
    double getArea() const override { 
        return 3.14159 * radius * radius; 
    }
    void printInfo() const override {
        cout << "Circle: Radius = " << radius << ", Area = " << getArea() << endl;
    }
};

class Rectangle : public Shape {
private:
    double width, height;

public:
    Rectangle(double w, double h) : width(w), height(h) {}
    double getArea() const override { 
        return width * height; 
    }
    void printInfo() const override {
        cout << "Rectangle: Width = " << width << ", Height = " << height << ", Area = " << getArea() << endl;
    }
};

int main() {
    Shape* shapes[2]; 
    shapes[0] = new Circle(5.0);
    shapes[1] = new Rectangle(4.0, 3.0);
    for (int i = 0; i < 2; ++i) {
        shapes[i]->printInfo(); 
    }
    delete shapes[0];
    delete shapes[1];
    
    return 0;
}
